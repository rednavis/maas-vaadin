plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'com.google.cloud.tools.jib' version '2.1.0'
    id 'com.vaadin' version '0.6.0'
    id 'com.github.ben-manes.versions' version '0.28.0'
}

apply plugin: 'java'
apply plugin: 'idea'
//apply plugin: 'war'
apply plugin: 'project-report'
apply plugin: 'jacoco'
apply plugin: 'io.spring.dependency-management'

apply from: "${rootDir}/gradle/java.gradle"
apply from: "${rootDir}/gradle/checkstyle.gradle"

ext {
    maasVaadinVersion = '0.0.1-SNAPSHOT'
    lombokVersion = '1.18.12'
    mapstructVersion = '1.3.1.Final'
    springBootVersion = '2.2.5.RELEASE'
    vaadinVersion = '14.1.19'
    appLayoutAddonVersion = '4.0.0.rc5'
    gsonVersion = '2.8.6'
    httpСlientVersion = '4.5.12'
    jupiterVersion = '5.6.0'
}

configurations.all {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "http://vaadin.com/nexus/content/repositories/vaadin-addons"
    }
}

dependencyManagement {
    dependencies {
        //Server
        dependency "org.projectlombok:lombok:${lombokVersion}"
        dependency "org.mapstruct:mapstruct:${mapstructVersion}"
        dependency "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        dependency "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        dependency "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"

        imports {
            mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        }
//        dependency "com.github.appreciated:app-layout-addon:${appLayoutAddonVersion}"

        dependency "com.google.code.gson:gson:${gsonVersion}"
        dependency "org.apache.httpcomponents:httpclient:${httpСlientVersion}"

//        Test
        dependency "org.junit.jupiter:junit-jupiter:${jupiterVersion}"
        dependency "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }
}

dependencies {
    implementation 'com.rednavis:maas-shared'

    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct'
    annotationProcessor 'org.mapstruct:mapstruct-processor'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation('com.vaadin:vaadin-spring-boot-starter') {
//        Webjars are only needed when running in Vaadin 13 compatibility mode
        ["com.vaadin.webjar",
         "org.webjars.bowergithub.insites",
         "org.webjars.bowergithub.polymer",
         "org.webjars.bowergithub.polymerelements",
         "org.webjars.bowergithub.vaadin",
         "org.webjars.bowergithub.webcomponents"]
                .forEach { group -> exclude(group: group) }
    }
//    implementation 'com.github.appreciated:app-layout-addon'

    implementation 'com.google.code.gson:gson'
    implementation 'org.apache.httpcomponents:httpclient'

    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

wrapper {
    gradleVersion = "6.2.2"
}

jib {
    from {
        image = "adoptopenjdk:12-jre-hotspot"
    }
    to {
        image = "maas-vaadin:${maasVaadinVersion}"
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}

clean {
    dependsOn gradle.includedBuild('maas-shared').task(':clean')
}

test {
    dependsOn gradle.includedBuild('maas-shared').task(':test')
}